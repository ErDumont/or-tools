name: Ubuntu composite

on:
  push:
    branches:
      - main
      - feature/*

jobs:

  cmake:
    runs-on: ubuntu-latest
    env:
      Sirius_Ref: antares_integration
      OR_Tools_Path: ${{ github.workspace }}/or-tools
      XPRS_Path: ${{ github.workspace }}/xpressmp813

    steps:
      - name: Checkout or-tools
        uses: actions/checkout@v2
        with:
          path: $OR_Tools_Path

      - name: setup envoronment
        id: setup
        uses: ./or-tools/.github/workflows/setup-env-ubuntu
        with:
          sirius-ref: $Sirius_Ref

      - name: user guide upload
        id: userguide_upload
        uses: actions/upload-artifact@v2
        with:
          name: user-guide
          path: ${{ steps.create-user-guide.outputs.pdf-path }}

      - name: Upload sirius install
        uses: actions/upload-artifact@v2
        with:
          name: sirius_install
          path: ${{ steps.setup.outputs.sirius-install-path }}

      - name: Checkout xpressmp813
        uses: actions/checkout@v2
        with:
          repository: rte-france/xpress-mp
          path: $XPRS_Path
          ref: master
          token: ${{ secrets.ACCESS_TOKEN }}

      - name: Configure or-tools
        working-directory: ./or-tools
        run: |
          cmake -S. \
                -Bbuild \
                -DCMAKE_BUILD_TYPE=Release \
                -DCMAKE_INSTALL_PREFIX="build/install" \
                -DBUILD_SHARED_LIBS=ON \
                -DBUILD_DEPS=ON \
                -DUSE_SIRIUS=ON \
                -Dsirius_solver_DIR="${{ steps.setup.outputs.sirius-install-path }}/cmake" \
                -DUSE_XPRESS=ON \
                -DXPRESS_ROOT="${{ env.XPRS_Path }}" \
                -DBUILD_PYTHON=OFF \
                -DBUILD_JAVA=OFF \
                -DBUILD_DOTNET=OFF
      - name: Build
        working-directory: ./or-tools
        run: |
          cmake --build build \
                --target all \
                install \
                -j4
      - name: Prepare ortools install dyn
        working-directory: ./or-tools/build/install
        run: find bin -type f ! \( -name 'protoc*' -o -name 'scip' -o -name 'fz' \) -delete
      - name: Upload artifact ortools install dyn
        uses: actions/upload-artifact@v2
        with:
          name: ortools_dyn_install
          path: ./or-tools/build/install
      - name: Publish asset  file upload
        if:  github.event_name == 'release' && github.event.action == 'created'
        uses: actions/upload-release-asset@v1.0.2
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ./or-tools/build/install
          asset_name: ortools_dyn_install

